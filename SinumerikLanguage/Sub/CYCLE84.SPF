%_N_CYCLE84_SPF
PROC CYCLE84(REAL RTP,REAL RFP,REAL SDIS,REAL DP,REAL DPR,REAL DTB,INT SDAC,REAL MPIT,REAL PIT,REAL POSS,REAL SST,REAL SST1,INT _AXN,INT _PTAB,INT _TECHNO,INT _VARI,REAL _DAM,REAL _VRT) SAVE SBLOF DISPLOF
; SOFTOBJECT-Version 
;VERSION: 4.000_(V06.02.09)
DEF AXIS _Z
DEF REAL PP,HH1,HH2,HH3,HH4,HH5,_HH9,HH11,VHA,HZ,FAK,_FAK1,_HMF
DEF INT HH7,_TECNO[5],_OLD12,_OLD21,_OLD24,SPINU,_ISO
DEF INT _ABS,_ORD,_APP
DEF INT _DRY_STAT=1
IF HH7>0 GOTOF _MA3
_TECNO[0]=(_TECHNO) MOD 10 _TECNO[1]=TRUNC(_TECHNO/10) MOD 10 _TECNO[2]=TRUNC(_TECHNO/100) MOD 10 _TECNO[3]=TRUNC(_TECHNO/1000) MOD 10
_TECNO[4]=TRUNC(_TECHNO/10000) MOD 10
IF((_TECNO[0]<0) OR (_TECNO[0]>3) OR (_TECNO[1]<0) OR (_TECNO[1]>2) OR (_TECNO[2]<0) OR (_TECNO[2]>3) OR (_TECNO[3]<0) OR (_TECNO[3]>1)) GOTOF _FEHL4
IF((_TECNO[4]<0) OR (_TECNO[4]>1)) GOTOF _FEHL4
_ABS=1 _ORD=2 _APP=3
IF $P_GG[6]==2
_ABS=3 _ORD=1 _APP=2
ENDIF
IF $P_GG[6]==3
_ABS=2 _ORD=3 _APP=1
ENDIF
CASE _AXN OF 1 GOTOF _AX1 2 GOTOF _AX2 DEFAULT GOTOF _AX3
_AX1:
IF ISAXIS(_ABS)
_Z=$P_AXN1
GOTOF _AX
ELSE
GOTOF _FEHL5
ENDIF
_AX2:
IF ISAXIS(_ORD)
_Z=$P_AXN2
GOTOF _AX
ELSE
GOTOF _FEHL5
ENDIF
_AX3:
IF ISAXIS(_APP)
_Z=$P_AXN3
ELSE
GOTOF _FEHL5
ENDIF
_AX:
IF ($P_DRYRUN)
_DRY_STAT=0
ENDIF
SPINU=$P_MSNUM
IF ($AN_NCK_VERSION < 450000) GOTOF _M6201
IF _TECNO[4]==0
IF $MA_PARAMSET_CHANGE_ENABLE[_Z]==2
IF ($MA_DRIVE_AX_RATIO_DENOM[($AA_SCPAR[_Z]-1),_Z] <> $MA_DRIVE_AX_RATIO_DENOM[1,_Z]) GOTOF _FEHL7
IF ($MA_DRIVE_AX_RATIO_NUMERA[($AA_SCPAR[_Z]-1),_Z] <> $MA_DRIVE_AX_RATIO_NUMERA[1,_Z]) GOTOF _FEHL7
ELSE
IF ($MA_DRIVE_AX_RATIO_DENOM[$AC_SGEAR[SPINU],_Z] <> $MA_DRIVE_AX_RATIO_DENOM[1,_Z]) GOTOF _FEHL7
IF ($MA_DRIVE_AX_RATIO_NUMERA[$AC_SGEAR[SPINU],_Z] <> $MA_DRIVE_AX_RATIO_NUMERA[1,_Z]) GOTOF _FEHL7
ENDIF
ENDIF
_M6201:
_HMF=$P_ACTFRAME[_Z,SC]
_ISO=(_VARI) DIV 1000
IF _ISO>1 GOTOF _FEHL3
_VARI=(_VARI) MOD 10
IF((_VARI<0) OR (_VARI>2)) GOTOF _FEHL3
IF(_VRT<=0)
_VRT=1
IF(($P_GG[13]==1) OR ($P_GG[13]==3))
_VRT=1/$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
DPR=ABS(DPR) _DAM=ABS(_DAM) SDIS=ABS(SDIS) HH3=$P_S[0] HH4=$P_F
IF DPR==0 GOTOF _MD1 IF RTP==RFP GOTOF _FEHL1
HH2=RFP-((RTP-RFP)/ABS(RTP-RFP)*DPR)
IF DP==0 GOTOF _MB1 IF DP==HH2 GOTOF _MD1
N1 MELDUNG(1)
_MB1:DP=HH2
_MD1:HH7=1 HH2=RTP-RFP
IF(_DAM==0)
_DAM=ABS(DP)
ENDIF
IF RFP==DP GOTOF _MX3 IF HH2==0 GOTOF _MA2 IF HH2/ABS(HH2)<>(RFP-DP)/ABS(RFP-DP) GOTOF _FEHL1
HH1=SDIS*(RFP-DP)/ABS(RFP-DP)
HH11=(RFP-DP)/ABS(RFP-DP)
_MA2:
CASE _PTAB OF 0 GOTOF _P0TAB 1 GOTOF _P1TAB 2 GOTOF _P2TAB 3 GOTOF _P3TAB DEFAULT GOTOF _FEHL2
_P0TAB:IF (PIT==0) AND (MPIT==0) GOTOF _FEHL2
PP=PIT
IF MPIT<>0
IF ((ABS(MPIT)<3) OR (ABS(MPIT)>48)) GOTOF _FEHL2
N2 STEIGUNG(PP,ABS(MPIT))
PP=PP*MPIT/ABS(MPIT)
IF((PP<>PIT) AND (PIT<>0)) GOTOF _FEHL2
ENDIF
GOTOF _ENDTAB
_P1TAB:IF (PIT==0) GOTOF _FEHL2
IF (($P_GG[13]==1) OR ($P_GG[13]==3))
PP=PIT/$MN_SCALING_VALUE_INCH
ELSE
PP=PIT
ENDIF
GOTOF _ENDTAB
_P2TAB:IF (PIT==0) GOTOF _FEHL2
IF(($P_GG[13]==1) OR ($P_GG[13]==3))
PP=1/PIT
ELSE
PP=$MN_SCALING_VALUE_INCH/PIT
ENDIF
GOTOF _ENDTAB
_P3TAB:IF (PIT==0) GOTOF _FEHL2
IF(($P_GG[13]==1) OR ($P_GG[13]==3))
PP=PIT
ELSE
PP=$MN_SCALING_VALUE_INCH*PIT
ENDIF
_ENDTAB:
IF (SDAC<6)AND(SDAC>2) GOTOF _MD2
SDAC=5
_MD2:IF SST1>0 GOTOF _MA3A
SST1=SST
_MA3A:
IF($P_GG[13]<3)
_FAK1=1
IF($MN_SCALING_SYSTEM_IS_METRIC)
IF($P_GG[13]==1)
_FAK1=1/$MN_SCALING_VALUE_INCH
ENDIF
ELSE
IF($P_GG[13]==2)
_FAK1=$MN_SCALING_VALUE_INCH
ENDIF
ENDIF
ELSE
_FAK1=1
ENDIF
_MA3:
HH2=RFP+HH1
IF(HH2<>$P_EP[_Z]*_FAK1)
SBLON
N20 G0 G9 G90 AX[_Z]=RFP+HH1/_HMF
SBLOF
ENDIF
IF ($P_SMODE[$P_MSNUM]<>2)
N29 S=SST
ENDIF
IF ($MC_ROUNDAXIS_FOR_SPINDLE[$P_MSNUM] >= 0)
IF POSS<0
N30 SPOS=DC($SC_THREAD_START_ANGLE)
ELSE
N30 SPOS=DC(POSS)
ENDIF
ENDIF
_OLD12=$P_GG[12]
CASE _TECNO[0] OF 1 GOTOF _GG601 2 GOTOF _GG602 3 GOTOF _GG603 DEFAULT GOTOF _GNIX
_GG601: G60 G601
GOTOF _GNIX
_GG602: G60 G602
GOTOF _GNIX
_GG603: G60 G603
_GNIX:
_OLD24=$P_GG[24]
CASE _TECNO[1] OF 1 GOTOF _FFW1 2 GOTOF _FFW2 DEFAULT GOTOF _FFNIX
_FFW1: FFWON
GOTOF _FFNIX
_FFW2: FFWOF
_FFNIX:
_OLD21=$P_GG[21]
CASE _TECNO[2] OF 1 GOTOF _ACC1 2 GOTOF _ACC2 3 GOTOF _ACC3 DEFAULT GOTOF _ACCNIX
_ACC1: SOFT
GOTOF _ACCNIX
_ACC2: BRISK
GOTOF _ACCNIX
_ACC3: DRIVE
_ACCNIX:
IF(_VARI==0)
IF(NOT $P_ISTEST) AND ((_DRY_STAT==1) OR (_ISO==1))
N32 G90 G331 AX[_Z]=DP IP[_Z]=PP/_HMF S=SST
N33 G4 F=DTB
N34 G332 AX[_Z]=RFP+HH1/_HMF IP[_Z]=PP/_HMF S=SST1
ELSE
N42 G90 G0 AX[_Z]=DP/_HMF S=SST
N43 G4 F=DTB
N44 G0 AX[_Z]=RFP+HH1/_HMF S=SST1
ENDIF
ELSE
HZ=1
FAK=1
_HH9=_DAM
HH2=RFP*_HMF-_DAM*HH11
IF((HH2-DP*_HMF)*HH11)<0 GOTOF _FEHL8
IF($P_GG[13]==1)OR($P_GG[13]==3)
FAK=$MN_SCALING_VALUE_INCH
ENDIF
IF(_VRT<=0)
_VRT=HZ/FAK
ENDIF
_MA5A: G90 G331 AX[_Z]=HH2/_HMF IP[_Z]=PP/_HMF S=SST
IF _ISO==0
IF(NOT $P_ISTEST)
G4 F=DTB
ENDIF
ENDIF
IF(HH2==DP*_HMF) GOTOF _MA8
IF(ABS(HH2-DP*_HMF)-_HH9>=_DAM)
IF(ABS(HH2-DP*_HMF)>2*_DAM)
HH5=HH2-_HH9*HH11
ELSE
IF(ABS(HH2-DP*_HMF)>_DAM)
HH5=HH2-ABS(HH2-DP*_HMF)/2*HH11
ELSE
HH5=DP*_HMF
ENDIF
ENDIF
ELSE
IF(ABS(HH2-DP*_HMF)>_HH9)
IF(ABS(HH2-DP*_HMF)>2*_DAM)
HH5=DP*_HMF+_DAM*HH11
ELSE
HH5=HH2-ABS(HH2-DP*_HMF)/2*HH11
ENDIF
ELSE
HH5=DP*_HMF
ENDIF
ENDIF
_MA6:
IF(_VARI==2)
N280 G90 G332 AX[_Z]=RFP+SDIS*HH11/_HMF IP[_Z]=PP/_HMF S=SST1
IF _ISO==0
IF(NOT $P_ISTEST)
G4 F=DTB
ENDIF
ENDIF
VHA=_VRT/FAK
N330 G90 G331 AX[_Z]=HH2/_HMF+VHA*HH11/_HMF IP[_Z]=PP/_HMF S=SST1
ELSE
N365 G91 G332 AX[_Z]=HH11*_VRT/_HMF IP[_Z]=PP/_HMF S=SST1
ENDIF
HH2=HH5
GOTOB _MA5A
_MA8:
IF _ISO==1
G4 F=DTB
ENDIF
ENDIF
IF (_VARI<>0)
N580 G90 G332 AX[_Z]=RFP+SDIS*HH11/_HMF IP[_Z]=PP/_HMF S=SST1
ENDIF
CASE _OLD12 OF 1 GOTOF _GOG601 2 GOTOF _GOG602 3 GOTOF _GOG603 DEFAULT GOTOF _GONIX
_GOG601: G601
GOTOF _GONIX
_GOG602: G602
GOTOF _GONIX
_GOG603: G603
_GONIX:
CASE _OLD24 OF 1 GOTOF _FFWO1 2 GOTOF _FFWO2 DEFAULT GOTOF _FFONIX
_FFWO1: FFWOF
GOTOF _FFONIX
_FFWO2: FFWON
_FFONIX:
CASE _OLD21 OF 1 GOTOF _ACCO1 2 GOTOF _ACCO2 3 GOTOF _ACCO3 DEFAULT GOTOF _ACCONIX
_ACCO1: BRISK
GOTOF _ACCONIX
_ACCO2: SOFT
GOTOF _ACCONIX
_ACCO3: DRIVE
_ACCONIX:
IF _TECNO[3]==0
SBLON
N36 G0 G64 AX[_Z]=RTP S=HH3 M=SDAC
SBLOF
ELSE
SBLON
N36 G0 G64 AX[_Z]=RTP
SBLOF
ENDIF
N37 MM2:MSG("")
IF HH4==0 GOTOF _MX3
N38 F=HH4
N39 _MX3:MSG("")
RET
_FEHL1:STOPRE
SETAL(61101)
RET
_FEHL2:STOPRE
SETAL(61001)
RET
_FEHL3:STOPRE
SETAL(61002)
RET
_FEHL4:STOPRE
SETAL(61125)
RET
_FEHL5:STOPRE
SETAL(61803)
RET
_FEHL7:STOPRE
SETAL(61127)
RET
_FEHL8:STOPRE
SETAL(61809)
RET
